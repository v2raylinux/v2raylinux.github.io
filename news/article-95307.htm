<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2raylinux.github.io/news/article-95307.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>聊一聊Vue3.2中setup语法糖+volar</title>
        <meta name="description" content="前言 现在，Vue3已经成为默认版本了。Vue3与Vue2相比较，变化还是比较大的。由原来的的组合式API变为选项式API。所以代码风格变化也是比较大的。为什么会有选项式API？我个人觉得very g" />
        <link rel="icon" href="/assets/website/img/v2raylinux/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2ray Linux免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2raylinux.github.io/news/article-95307.htm" />
    <meta property="og:site_name" content="V2ray Linux免费机场订阅节点官网" />
    <meta property="og:title" content="聊一聊Vue3.2中setup语法糖+volar" />
    <meta property="og:image" content="https://v2raylinux.github.io/uploads/20241109-1/6bcec41925f6905196c97221c6a57b56.webp" />
        <meta property="og:release_date" content="2025-04-13T07:20:34" />
    <meta property="og:updated_time" content="2025-04-13T07:20:34" />
        <meta property="og:description" content="前言 现在，Vue3已经成为默认版本了。Vue3与Vue2相比较，变化还是比较大的。由原来的的组合式API变为选项式API。所以代码风格变化也是比较大的。为什么会有选项式API？我个人觉得very g" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="聊一聊Vue3.2中setup语法糖+volar">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <link rel="dns-prefetch" href="https://fonts.gstatic.com">

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/" rel="preconnect">
    <link href="https://fonts.gstatic.com/" rel="preconnect" crossorigin="">
    <link href="/assets/website/css/v2raylinux/css2-Robotoitalwght010003000400050007000900110013001400150017001900_OpenSansitalwght030004000500060007000800130014001500160017001800_Poppinsitalwght010002000300040005000600070008000900110012001300140015001600170018001900_swap.css" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/css/v2raylinux/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/aos.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/all.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/swiper-bundle.min.css" rel="stylesheet">
    <!-- Main CSS File -->
    <link href="/assets/website/css/v2raylinux/main.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-WVK9TPX8ME"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-WVK9TPX8ME');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body class="about-page" data-page="detail">
        <header id="header" class="header d-flex align-items-center fixed-top">
        <div class="container-fluid container-xl position-relative d-flex align-items-center justify-content-between">
            <a href="/" class="logo d-flex align-items-center">
                                <span class="sitename">V2ray Linux</span>
                            </a>
            <nav id="navmenu" class="navmenu">
                <ul>
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/client.htm">客户端</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                    </ul>
                <i class="mobile-nav-toggle d-xl-none bi bi-list"></i>
            </nav>
        </div>
    </header>
    <main class="main">
        <!-- Page Title -->
        <div class="page-title dark-background" style="background-image: url(/assets/website/img/v2raylinux/page-title-bg.jpg);">
            <div class="container position-relative">
                <h1>聊一聊Vue3.2中setup语法糖+volar</h1>
                <nav class="breadcrumbs">
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="新闻资讯">新闻资讯</a></li>
                        <li class="current">正文</li>
                    </ol>
                </nav>
            </div>
        </div><!-- End Page Title -->
        <!-- Alt Services Section -->
        <section id="alt-services" class="alt-services section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="V2ray X节点订阅官网" data-url="https://v2rayx.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-dracula"> <h2><a id="_1" rel="nofollow"></a>前言</h2> <p>现在，Vue3已经成为默认版本了。Vue3与Vue2相比较，变化还是比较大的。由原来的的组合式API变为选项式API。所以代码风格变化也是比较大的。为什么会有选项式API？我个人觉得very good！。</p> <p>要使用Vue3，那必须得会setup，因为setup是组合式API表演的舞台。而Vue3.2之后官方就退出setup语法糖，使我们在写代码的时候更爽！！！</p> <h2><a id="volar_6" rel="nofollow"></a>安装volar</h2> <p>如果你的VScode之前安装有<code>vuter</code>插件，请先把他禁用或者卸载掉，然后安装<code>volar</code>。因为，<code>vuter</code>插件是针对Vue2的，而Vue3的写法跟Vue3是有区别的，特别是使用setup语法糖之后，所以写代码的时候可能会有报错(编译不会)什么的。<code>volar</code>插件则是针对Vue3的。安装之后就不报错，而且有提示出来。而且点击右上角的小图标，还可以将html代码、js代码和css代码做分开展示，特别好！！！</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220610/4192374d9b6aa4b6207d6cfa0db9cd5a.jpg" alt="聊一聊Vue3.2中setup语法糖+volar"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220610/c71d76267bad8a89357a934cd6b18e54.jpg" alt="聊一聊Vue3.2中setup语法糖+volar"></p> <h2><a id="Vue3_14" rel="nofollow"></a>Vue3中变量和方法</h2> <h3><a id="_16" rel="nofollow"></a>之前的用法</h3> <p>通过这个例子，我们可以知道，Vue3中HTML模板<strong>不再需要一个根标签</strong>了，数据也不用在<code>data</code>中定义，方法也不需要在<code>methods</code>中定义。而且，模板中需要的数据、方法必须在<code>setup</code>中<strong>返回(return)</strong>。</p> <pre><code class="prism language-js"><span class="token comment">// components/Demo.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>Vue3<span class="token punctuation">.</span><span class="token number">2</span>中setup语法糖的使用<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"increment"</span><span class="token operator">&gt;</span>舔我<span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span> count<span class="token punctuation">}</span><span class="token punctuation">}</span> 次了<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> ref<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">let</span> count<span class="token operator">=</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span><span class="token function-variable function">increment</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>       count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span>       count<span class="token punctuation">,</span>       increment<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <h3><a id="setup_44" rel="nofollow"></a>现在的用法(setup语法糖)</h3> <p>在&lt;script setup&gt;中，需要在<strong>script标签加上setup属性</strong>，就<strong>不再需要写setup</strong>函数，而且模板中用到的变量和方法不需要<strong>返回(return)</strong>。代码一对比，是不是觉得有点东西了呢？</p> <pre><code class="prism language-javascript"><span class="token comment">// components/Demo.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>Vue3<span class="token punctuation">.</span><span class="token number">2</span>中setup语法糖的使用<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"increment"</span><span class="token operator">&gt;</span>舔我<span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span> count<span class="token punctuation">}</span><span class="token punctuation">}</span> 次了<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> ref<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">let</span> count<span class="token operator">=</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span><span class="token function-variable function">increment</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span> 		count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220610/9f97d56d4a037764b21312344c794593.jpg" alt="聊一聊Vue3.2中setup语法糖+volar"></p> <h2><a id="Vue3_70" rel="nofollow"></a>Vue3中使用组件</h2> <h3><a id="_72" rel="nofollow"></a>之前的用法</h3> <pre><code class="prism language-js"><span class="token comment">// App.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>demo<span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token keyword">import</span> Demo<span class="token keyword">from</span><span class="token string">'./components/Demo.vue'</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span> Demo<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <h3><a id="setup_90" rel="nofollow"></a>现在的用法(setup语法糖)</h3> <p>在&lt;script setup&gt;中，只需要在引入组件即可在模板中使用，不再需要自己去注册组件。</p> <pre><code class="prism language-javascript"><span class="token comment">// App.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>demo<span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span><span class="token keyword">import</span> Demo<span class="token keyword">from</span><span class="token string">'./components/Demo.vue'</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <h2><a id="Vue3Props__defineProps_108" rel="nofollow"></a>Vue3中接收Props --&gt; defineProps()</h2> <h4><a id="_110" rel="nofollow"></a>之前的用法</h4> <p>传递数据给组件，传递的方式不变，接收时，需要在props中定义接收。setup函数被调用接收到的以第一个参数就是props。</p> <pre><code class="prism language-js"><span class="token comment">// App.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>demo msg<span class="token operator">=</span><span class="token string">"hi Demo, I'm your father!"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span><span class="token keyword">import</span> Demo<span class="token keyword">from</span><span class="token string">'./components/Demo.vue'</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <pre><code class="prism language-js"><span class="token comment">// components/Demo.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>Vue3<span class="token punctuation">.</span><span class="token number">2</span>中setup语法糖的使用<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"increment"</span><span class="token operator">&gt;</span>舔我<span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span> count<span class="token punctuation">}</span><span class="token punctuation">}</span> 次了<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span>msg<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> ref<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">let</span> count<span class="token operator">=</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span><span class="token function-variable function">increment</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span> 				count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">}</span>  			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span> 				count<span class="token punctuation">,</span> 				increment<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <h4><a id="setup_164" rel="nofollow"></a>现在的用法(setup语法糖)</h4> <p>在&lt;script setup&gt;中，我们没有机会写setup函数，就接收不到他调用时传递的参数。所以有一个新的API<code>defineProps</code>它是一个函数。<code>defineProps</code>会返回一个对象，其中包含了可以传递给组件的所有 props。</p> <pre><code class="prism language-js"><span class="token comment">// components/Demo.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>Vue3<span class="token punctuation">.</span><span class="token number">2</span>中setup语法糖的使用<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"increment"</span><span class="token operator">&gt;</span>舔我<span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span> count<span class="token punctuation">}</span><span class="token punctuation">}</span> 次了<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span>msg<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> ref<span class="token punctuation">,</span> defineProps<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">const</span> props<span class="token operator">=</span><span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'msg'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 	 	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token keyword">let</span> count<span class="token operator">=</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span><span class="token function-variable function">increment</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span> 		count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220610/2f746890c0b3329701d64a12e0ede360.jpg" alt="聊一聊Vue3.2中setup语法糖+volar"></p> <h2><a id="Vue3__defineEmits_197" rel="nofollow"></a>Vue3中射出自定义事件 --&gt; defineEmits()</h2> <h4><a id="_199" rel="nofollow"></a>之前的用法</h4> <p>子组件射出自定义事件给父组件，则需要通过<code>emits</code>定义好要传递的事件，setup函数中的第二个参数就是上下文对象(<em>这里我们不详细介绍了</em>)，然后通过这个对象去调用<code>emit</code>方法就可以射出自定义事件了。</p> <pre><code class="prism language-js"><span class="token comment">// components/Demo.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>Vue3<span class="token punctuation">.</span><span class="token number">2</span>中setup语法糖的使用<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"increment"</span><span class="token operator">&gt;</span>舔我<span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span> count<span class="token punctuation">}</span><span class="token punctuation">}</span> 次了<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span>msg<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> ref<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">emits</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">'hanlde-count'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> centext</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">let</span> count<span class="token operator">=</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span><span class="token function-variable function">increment</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span> 				count<span class="token punctuation">.</span>value<span class="token operator">++</span> 				centext<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'hanlde-count'</span><span class="token punctuation">,</span> count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>  			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span> 				count<span class="token punctuation">,</span> 				increment<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <pre><code class="prism language-js"><span class="token comment">// App.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>demo     msg<span class="token operator">=</span><span class="token string">"hi Demo, I'm your father!"</span>     @hanlde<span class="token operator">-</span>count<span class="token operator">=</span><span class="token string">"hanldeCount"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token keyword">import</span> Demo<span class="token keyword">from</span><span class="token string">'./components/Demo.vue'</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span> Demo<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">const</span><span class="token function-variable function">hanldeCount</span><span class="token operator">=</span><span class="token parameter">count</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span>       hanldeCount<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <h4><a id="setup_270" rel="nofollow"></a>现在的用法(setup语法糖)</h4> <p>在&lt;script setup&gt;中，子组件想要射出自定义事件时，则需要通过<code>defineEmits</code>来定义自定义事件。</p> <pre><code class="prism language-js"><span class="token comment">// components/Demo.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>Vue3<span class="token punctuation">.</span><span class="token number">2</span>中setup语法糖的使用<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"increment"</span><span class="token operator">&gt;</span>舔我<span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span> count<span class="token punctuation">}</span><span class="token punctuation">}</span> 次了<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span>msg<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> ref<span class="token punctuation">,</span> defineProps<span class="token punctuation">,</span> defineEmits<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">const</span> props<span class="token operator">=</span><span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'msg'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">const</span> emit<span class="token operator">=</span><span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'hanlde-count'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token keyword">let</span> count<span class="token operator">=</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span><span class="token function-variable function">increment</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span> 		count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'hanlde-count'</span><span class="token punctuation">,</span> count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220610/0b53f32204ae04b4d0adba64df3c3157.jpg" alt="聊一聊Vue3.2中setup语法糖+volar"></p> <h2><a id="Vue3__defineExpose_306" rel="nofollow"></a>Vue3中父组件获取组件的数据或方法 --&gt; defineExpose()</h2> <h4><a id="_308" rel="nofollow"></a>之前的用法</h4> <p>在子组件中，暴露组件变量或者方法时，不用做其他操作，只需要确保<code>setup</code>函数中<code>return</code>该变量或方法。因为在<code>script</code>标签中所有代码都使用<code>expost default</code>暴露了。而在父组件中需要通过给子组件添加<code>ref</code>属性，然后在<code>onMounted</code>生命周期函数中获取子组件的<code>dom</code>即可获得子组件的变量和方法。</p> <p><font color="red"><strong>注意：获取dom是，一定在<code>onMounted</code>声明周期获取，因为页面没有渲染，就获取不要dom</strong></font></p> <pre><code class="prism language-js"><span class="token comment">// components/Demo.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>Vue3<span class="token punctuation">.</span><span class="token number">2</span>中setup语法糖的使用<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"increment"</span><span class="token operator">&gt;</span>舔我<span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span> count<span class="token punctuation">}</span><span class="token punctuation">}</span> 次了<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span>msg<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> ref<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">'msg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token literal-property property">emits</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">'hanlde-count'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">let</span> count<span class="token operator">=</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span> name<span class="token operator">=</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'vernin'</span><span class="token punctuation">)</span><span class="token keyword">const</span><span class="token function-variable function">increment</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span> 				count<span class="token punctuation">.</span>value<span class="token operator">++</span> 				context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'hanlde-count'</span><span class="token punctuation">,</span> count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span> 				count<span class="token punctuation">,</span> 				increment<span class="token punctuation">,</span> 				name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <pre><code class="prism language-js"><span class="token comment">// App.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>demo     ref<span class="token operator">=</span><span class="token string">"demo"</span>     msg<span class="token operator">=</span><span class="token string">"hi Demo, I'm your father!"</span>     @hanlde<span class="token operator">-</span>count<span class="token operator">=</span><span class="token string">"hanldeCount"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token keyword">import</span> Demo<span class="token keyword">from</span><span class="token string">'./components/Demo.vue'</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> ref<span class="token punctuation">,</span> onMounted<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span> Demo<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">const</span> demo<span class="token operator">=</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment">// 记得把 demo return 出去</span><span class="token comment">// 错误写法：setup 函数无法获取dom -- setup相对于vue2的created钩子</span><span class="token comment">// console.log(demo.value.name) // 报错</span><span class="token comment">// console.log(demo.value.count) // 报错</span><span class="token comment">// 正确写法：</span><span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'子组件Demo的count：'</span><span class="token punctuation">,</span> demo<span class="token punctuation">.</span>value<span class="token punctuation">.</span>count<span class="token punctuation">)</span>         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'子组件Demo的name：'</span><span class="token punctuation">,</span> demo<span class="token punctuation">.</span>value<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">const</span><span class="token function-variable function">hanldeCount</span><span class="token operator">=</span><span class="token parameter">count</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span>         demo<span class="token punctuation">,</span>         hanldeCount<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <h4><a id="setup_394" rel="nofollow"></a>现在的用法(setup语法糖)</h4> <p>在&lt;script setup&gt;中，没有写<code>export default</code>暴露，为了在组件中明确要暴露出去的变量或方法，需要使用<code>defineExpose</code>来变量，在父组件中，也是通过给子组件<code>ref</code>属性获取。</p> <pre><code class="prism language-js"><span class="token comment">// components/Demo.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>Vue3<span class="token punctuation">.</span><span class="token number">2</span>中setup语法糖的使用<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"increment"</span><span class="token operator">&gt;</span>舔我<span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span> count<span class="token punctuation">}</span><span class="token punctuation">}</span> 次了<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span>msg<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> ref<span class="token punctuation">,</span> defineProps<span class="token punctuation">,</span> defineEmits<span class="token punctuation">,</span> defineExpose<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">const</span> props<span class="token operator">=</span><span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'msg'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">const</span> emit<span class="token operator">=</span><span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'hanlde-count'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">let</span> count<span class="token operator">=</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">const</span><span class="token function-variable function">increment</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span> 		count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'hanlde-count'</span><span class="token punctuation">,</span> count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">const</span> name<span class="token operator">=</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'vernin'</span><span class="token punctuation">)</span><span class="token function">defineExpose</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span> 		name<span class="token punctuation">,</span> 		count<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <pre><code class="prism language-js"><span class="token comment">// App.vue</span><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>demo     ref<span class="token operator">=</span><span class="token string">"demo"</span>     msg<span class="token operator">=</span><span class="token string">"hi Demo, I'm your father!"</span>     @hanlde<span class="token operator">-</span>count<span class="token operator">=</span><span class="token string">"hanldeCount"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span><span class="token keyword">import</span> Demo<span class="token keyword">from</span><span class="token string">'./components/Demo.vue'</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> ref<span class="token punctuation">,</span> onMounted<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">const</span> demo<span class="token operator">=</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'子组件Demo的count：'</span><span class="token punctuation">,</span> demo<span class="token punctuation">.</span>value<span class="token punctuation">.</span>count<span class="token punctuation">)</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'子组件Demo的name：'</span><span class="token punctuation">,</span>demo<span class="token punctuation">.</span>value<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">const</span><span class="token function-variable function">hanldeCount</span><span class="token operator">=</span><span class="token parameter">count</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220610/300f10d767039dacbf9b9da24ce55acd.jpg" alt="聊一聊Vue3.2中setup语法糖+volar"></p> <h2><a id="_464" rel="nofollow"></a>总结</h2> <p>使用setup语法糖和setup函数对比，我们不难看出，使用语法糖是，代码整洁了好多，不会有那么多的对象嵌套。也不用做什么额外的return，代码也简化了不少。</p> <p>我前面说道<code>要使用Vue3，那必须得会setup</code>，实则不然，在Vue3中也是兼容Vue2的写法的，不一定非得使用<code>setup</code>。但是，通过使用setup之后，特别是用setup语法糖，不得不说，<strong>真是爽得不要不要的~~~</strong></p> <p><strong>最后看看官方给出组合式API的优点以及官方给出选项式API和组合式API的对比图</strong></p> <ol> <li>更灵活的代码组织</li> <li>更灵活的代码组织</li> <li>更好的类型推导</li> <li>生产包体积更小</li> </ol> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220610/b178bc48c6fb524720cdd074f2c003b8.jpg" alt="聊一聊Vue3.2中setup语法糖+volar"></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-94548.htm">springboot基础(6):整合ActiveMQ</a></p>
                                        <p>下一个：<a href="/news/article-95308.htm">Android 12(S) 图像显示系统 &#8211; SurfaceFlinger 之 VSync &#8211; 中篇（十七）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-87136.htm" title="狗粮颗粒制作方法配方大全（最简颗粒狗粮制作方法）">狗粮颗粒制作方法配方大全（最简颗粒狗粮制作方法）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-3-node-share-links.htm" title="V2ray Linux节点订阅每天更新23M/S免费节点订阅链接">V2ray Linux节点订阅每天更新23M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-7-free-node-subscribe-links.htm" title="V2ray Linux节点订阅每天更新18.1M/S免费节点订阅链接">V2ray Linux节点订阅每天更新18.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-92318.htm" title="动物医院管理制度文本怎么写（动物医院管理流程）">动物医院管理制度文本怎么写（动物医院管理流程）</a></li>
                        <li class="py-2"><a href="/news/article-82829.htm" title="宠物粮食创业（宠物粮食生意怎么样）">宠物粮食创业（宠物粮食生意怎么样）</a></li>
                        <li class="py-2"><a href="/news/article-90940.htm" title="linux搭建NFS网络文件共享服务">linux搭建NFS网络文件共享服务</a></li>
                        <li class="py-2"><a href="/news/article-90780.htm" title="动物疫苗新法案例分享会 动物疫苗新法案例分享会发言稿">动物疫苗新法案例分享会 动物疫苗新法案例分享会发言稿</a></li>
                        <li class="py-2"><a href="/news/article-67991.htm" title="昆明市宠物猫领养（昆明市宠物猫领养中心）">昆明市宠物猫领养（昆明市宠物猫领养中心）</a></li>
                        <li class="py-2"><a href="/news/article-93034.htm" title="python 递归函数及递归次数受到限制的解决办法">python 递归函数及递归次数受到限制的解决办法</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-13-node-share.htm" title="V2ray Linux节点订阅每天更新18.1M/S免费节点订阅链接">V2ray Linux节点订阅每天更新18.1M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">45</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- /Alt Services Section -->
    </main>
        <footer id="footer" class="footer dark-background">
        <div class="container copyright text-center mt-4">
                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
            <p>
                <a href="/">V2ray Linux免费机场订阅节点官网</a> 版权所有 Powered by WordPress
            </p>
            <div class="credits">
                <!-- All the links in the footer should remain intact. -->
                <!-- You can delete the links only if you've purchased the pro version. -->
                <!-- Licensing information:  -->
                <!-- Purchase the pro version with working PHP/AJAX contact form: [buy-url] -->
            </div>
        </div>
    </footer>
    <!-- Scroll Top -->
    <a href="#" id="scroll-top" class="scroll-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Preloader -->
    <div id="preloader"></div>
    <!-- Vendor JS Files -->
    <script data-cfasync="false" src="/assets/website/js/frontend/v2raylinux/email-decode.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/jquery-3.6.0.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/validate.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/aos.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/swiper-bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/purecounter_vanilla.js"></script>
    <!-- Main JS File -->
    <script src="/assets/website/js/frontend/v2raylinux/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>