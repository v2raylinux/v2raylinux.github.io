<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2raylinux.github.io/news/article-94548.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>springboot基础(6):整合ActiveMQ</title>
        <meta name="description" content="文章目录  安装ActiveMQ springboot整合ActiveMQ 监听模式处理消息   简单的监听处理任务 串行队列任务处理   使用默认队列    https://blog.csdn.ne" />
        <link rel="icon" href="/assets/website/img/v2raylinux/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2ray Linux免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2raylinux.github.io/news/article-94548.htm" />
    <meta property="og:site_name" content="V2ray Linux免费机场订阅节点官网" />
    <meta property="og:title" content="springboot基础(6):整合ActiveMQ" />
    <meta property="og:image" content="https://v2raylinux.github.io/uploads/20241109-1/9db8ec563cb40dbaed9faca16455aba4.webp" />
        <meta property="og:release_date" content="2025-04-12T08:59:54" />
    <meta property="og:updated_time" content="2025-04-12T08:59:54" />
        <meta property="og:description" content="文章目录  安装ActiveMQ springboot整合ActiveMQ 监听模式处理消息   简单的监听处理任务 串行队列任务处理   使用默认队列    https://blog.csdn.ne" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="springboot基础(6):整合ActiveMQ">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <link rel="dns-prefetch" href="https://fonts.gstatic.com">

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/" rel="preconnect">
    <link href="https://fonts.gstatic.com/" rel="preconnect" crossorigin="">
    <link href="/assets/website/css/v2raylinux/css2-Robotoitalwght010003000400050007000900110013001400150017001900_OpenSansitalwght030004000500060007000800130014001500160017001800_Poppinsitalwght010002000300040005000600070008000900110012001300140015001600170018001900_swap.css" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/css/v2raylinux/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/aos.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/all.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/swiper-bundle.min.css" rel="stylesheet">
    <!-- Main CSS File -->
    <link href="/assets/website/css/v2raylinux/main.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-WVK9TPX8ME"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-WVK9TPX8ME');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body class="about-page" data-page="detail">
        <header id="header" class="header d-flex align-items-center fixed-top">
        <div class="container-fluid container-xl position-relative d-flex align-items-center justify-content-between">
            <a href="/" class="logo d-flex align-items-center">
                                <span class="sitename">V2ray Linux</span>
                            </a>
            <nav id="navmenu" class="navmenu">
                <ul>
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/client.htm">客户端</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                    </ul>
                <i class="mobile-nav-toggle d-xl-none bi bi-list"></i>
            </nav>
        </div>
    </header>
    <main class="main">
        <!-- Page Title -->
        <div class="page-title dark-background" style="background-image: url(/assets/website/img/v2raylinux/page-title-bg.jpg);">
            <div class="container position-relative">
                <h1>springboot基础(6):整合ActiveMQ</h1>
                <nav class="breadcrumbs">
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="新闻资讯">新闻资讯</a></li>
                        <li class="current">正文</li>
                    </ol>
                </nav>
            </div>
        </div><!-- End Page Title -->
        <!-- Alt Services Section -->
        <section id="alt-services" class="alt-services section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="V2ray X节点订阅官网" data-url="https://v2rayx.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#ActiveMQ_1" rel="nofollow">安装ActiveMQ</a></li> <li><a href="#springbootActiveMQ_4" rel="nofollow">springboot整合ActiveMQ</a></li> <li><a href="#_138" rel="nofollow">监听模式处理消息</a></li> <li> <ul> <li><a href="#_139" rel="nofollow">简单的监听处理任务</a></li> <li><a href="#_162" rel="nofollow">串行队列任务处理</a></li> </ul> </li> <li><a href="#_201" rel="nofollow">使用默认队列</a></li> </ul> </div> </h1> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/u011628753/article/details/123370072?spm=1001.2014.3001.5501"  rel="nofollow">https://blog.csdn.net/u011628753/article/details/123370072?spm=1001.2014.3001.5501</a></p> <hr/> </h1> <p>（生产者消费者模型）</p> <ol> <li> <p>新建模块，选择springboot项目</p> </li> <li> <p>导入依赖坐标</p> </li> </ol> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-activemq<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></code></pre> <p>3.新建接口和实现</p> <pre><code class="prism language-java"><span class="token keyword">package</span><span class="token namespace">com<span class="token punctuation">.</span>it2<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">interface</span><span class="token class-name">OrderService</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <pre><code class="prism language-java"><span class="token keyword">package</span><span class="token namespace">com<span class="token punctuation">.</span>it2<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">OrderServiceActiveMqImpl</span><span class="token keyword">implements</span><span class="token class-name">OrderService</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span><span class="token class-name">MessageService</span> messageService<span class="token punctuation">;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户下单,订单id:"</span><span class="token operator">+</span>id<span class="token operator">+</span><span class="token string">", start"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         messageService<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户下单,订单id:"</span><span class="token operator">+</span>id<span class="token operator">+</span><span class="token string">", end"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <pre><code class="prism language-java"><span class="token keyword">package</span><span class="token namespace">com<span class="token punctuation">.</span>it2<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">interface</span><span class="token class-name">MessageService</span><span class="token punctuation">{<!-- --></span><span class="token keyword">void</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span>  id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span><span class="token function">doMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <pre><code class="prism language-java"><span class="token keyword">package</span><span class="token namespace">com<span class="token punctuation">.</span>it2<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jms<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">JmsMessagingTemplate</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">MessageActiveMqServiceImpl</span><span class="token keyword">implements</span><span class="token class-name">MessageService</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span><span class="token class-name">JmsMessagingTemplate</span> messagingTemplate<span class="token punctuation">;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"将消息加入队列(activemq),id:"</span><span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>         messagingTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">"message.queue.id"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"===================================================="</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token class-name">String</span><span class="token function">doMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"处理消息结束"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> id<span class="token operator">=</span> messagingTemplate<span class="token punctuation">.</span><span class="token function">receiveAndConvert</span><span class="token punctuation">(</span><span class="token string">"message.queue.id"</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> id<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <ol start="4"> <li>新建controller</li> </ol> <pre><code class="prism language-java"><span class="token keyword">package</span><span class="token namespace">com<span class="token punctuation">.</span>it2<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">com<span class="token punctuation">.</span>it2<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">OrderService</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PathVariable</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">OrderController</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span><span class="token class-name">OrderService</span> orderService<span class="token punctuation">;</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/order/{id}"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token class-name">String</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户下单"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         orderService<span class="token punctuation">.</span><span class="token function">order</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token string">"hello ,"</span><span class="token operator">+</span>id<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <pre><code class="prism language-java"><span class="token keyword">package</span><span class="token namespace">com<span class="token punctuation">.</span>it2<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">com<span class="token punctuation">.</span>it2<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">MessageService</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">com<span class="token punctuation">.</span>it2<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">OrderService</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PathVariable</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">MessageController</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span><span class="token class-name">MessageService</span> messageService<span class="token punctuation">;</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/sendMessage"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token class-name">String</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"处理发送短信"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> id<span class="token operator">=</span> messageService<span class="token punctuation">.</span><span class="token function">doMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token string">"send message ,"</span><span class="token operator">+</span>id<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <ol start="5"> <li>配置application.yml文件</li> </ol> <pre><code class="prism language-yml"><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">activemq</span><span class="token punctuation">:</span><span class="token key atrule">broker-url</span><span class="token punctuation">:</span> tcp<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span><span class="token number">61616</span></code></pre> <ol start="6"> <li>启动项目</li> </ol> <ul> <li>（1）发起订单请求127.0.0.1:8080/order/1,可以多发几次。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221201/a2aab1f2fbf0cb163af3c53cab21b579.jpg" alt="springboot基础(6):整合ActiveMQ"></li> <li>（2）处理队列中的短信发送业务127.0.0.1:8080/sendMessage，每次执行会处理一条，如果没有消息，则会监听等待直到有任务进入队列。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221201/7c6238347564e33fa7c1f9adf3828b3a.jpg" alt="springboot基础(6):整合ActiveMQ"></li> </ul> <hr/> </h1> <h2><a id="_139" rel="nofollow"></a>简单的监听处理任务</h2> <p>上面的情况，明显每次下单发短信，处理短信的时候，都需要调用MessageController去处理短信发送任务，明显不符合实际开发要求，那么我们改用监听器模式实现队列中的任务处理。</p> <ol> <li>新建MessageListenerActiveMq注解成为组件。</li> </ol> <pre><code class="prism language-java"><span class="token keyword">package</span><span class="token namespace">com<span class="token punctuation">.</span>it2<span class="token punctuation">.</span>service<span class="token punctuation">.</span>listener</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jms<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">JmsListener</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">MessageListenerActiveMq</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@JmsListener</span><span class="token punctuation">(</span>destination<span class="token operator">=</span><span class="token string">"message.queue.id"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">receive</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行短信的发送(ActiveMq）id:"</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <ol start="2"> <li>启动项目，发起订单请求:127.0.0.1:8080/order/1, 监听器将会处理这些任务。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221201/eedeab5518b03cdfc5886471c38db6c7.jpg" alt="springboot基础(6):整合ActiveMQ"></li> </ol> <h2><a id="_162" rel="nofollow"></a>串行队列任务处理</h2> <p>假设我的业务业务要求发送短信之后，还需要发送email,可以利用@SendTo将结果继续发送到新的队列处理，例如</p> <pre><code class="prism language-java"><span class="token keyword">package</span><span class="token namespace">com<span class="token punctuation">.</span>it2<span class="token punctuation">.</span>service<span class="token punctuation">.</span>listener</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jms<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">JmsListener</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>messaging<span class="token punctuation">.</span>handler<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">SendTo</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span><span class="token punctuation">;</span><span class="token comment">/**  * 组件  */</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">MessageListenerActiveMq</span><span class="token punctuation">{<!-- --></span><span class="token comment">/**      * 注解SendTo是将方法的返回值添加到mail.queue.id的队列,所以不能是void的方法      * @param id      * @return      */</span><span class="token annotation punctuation">@JmsListener</span><span class="token punctuation">(</span>destination<span class="token operator">=</span><span class="token string">"message.queue.id"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SendTo</span><span class="token punctuation">(</span><span class="token string">"mail.queue.id"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token class-name">String</span><span class="token function">receive</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行短信的发送(ActiveMq）id:"</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token string">"mail-"</span><span class="token operator">+</span>id<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@JmsListener</span><span class="token punctuation">(</span>destination<span class="token operator">=</span><span class="token string">"mail.queue.id"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">receive2</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行email的发送(ActiveMq）id:"</span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>执行结果<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221201/ac26655b64a0a4e52b0f84079b2f3fea.jpg" alt="springboot基础(6):整合ActiveMQ"></p> <hr/> </h1> <p><em><strong>不推荐使用此方法</strong></em><br /> 如下代码变动(MessageActiveMqServiceImpl)</p> <pre><code class="prism language-java"><span class="token keyword">package</span><span class="token namespace">com<span class="token punctuation">.</span>it2<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jms<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">JmsMessagingTemplate</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">MessageActiveMqServiceImpl</span><span class="token keyword">implements</span><span class="token class-name">MessageService</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Autowired</span><span class="token keyword">private</span><span class="token class-name">JmsMessagingTemplate</span> messagingTemplate<span class="token punctuation">;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"将消息加入队列(activemq),id:"</span><span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        messagingTemplate.convertAndSend("message.queue.id", id);//自定义队列</span>         messagingTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//使用默认队列</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"===================================================="</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token class-name">String</span><span class="token function">doMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"处理消息结束"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        String id = messagingTemplate.receiveAndConvert("message.queue.id", String.class);//自定义队列</span><span class="token class-name">String</span> id<span class="token operator">=</span>messagingTemplate<span class="token punctuation">.</span><span class="token function">receiveAndConvert</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//读取默认队列</span><span class="token keyword">return</span> id<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>当使用默认队列时，必须配置默认队列名,否则执行时将会报错。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221201/98a1648ddbf777afc213c1fd960a25ed.jpg" alt="springboot基础(6):整合ActiveMQ"></p> <p>application.yml</p> <pre><code class="prism language-yml"><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">activemq</span><span class="token punctuation">:</span><span class="token key atrule">broker-url</span><span class="token punctuation">:</span> tcp<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span><span class="token number">61616</span><span class="token key atrule">jms</span><span class="token punctuation">:</span><span class="token key atrule">template</span><span class="token punctuation">:</span><span class="token key atrule">default-destination</span><span class="token punctuation">:</span><span class="token string">"it2"</span><span class="token comment">#设定默认的队列名,如果使用默认队列时，必须设置此项</span></code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-94547.htm">Axios封装和Vuex模块化</a></p>
                                        <p>下一个：<a href="/news/article-95307.htm">聊一聊Vue3.2中setup语法糖+volar</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-96075.htm" title="猫三联打几针多少钱一针（猫三联打几针多少钱一针啊）">猫三联打几针多少钱一针（猫三联打几针多少钱一针啊）</a></li>
                        <li class="py-2"><a href="/news/article-79357.htm" title="南京领养狗狗的平台叫什么（南京免费领养狗狗正规网站平台）">南京领养狗狗的平台叫什么（南京免费领养狗狗正规网站平台）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-5-free-high-speed-nodes.htm" title="V2ray Linux节点订阅每天更新22.2M/S免费节点订阅链接">V2ray Linux节点订阅每天更新22.2M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-92318.htm" title="动物医院管理制度文本怎么写（动物医院管理流程）">动物医院管理制度文本怎么写（动物医院管理流程）</a></li>
                        <li class="py-2"><a href="/news/article-77294.htm" title="动物疫苗发展前景怎么样知乎（动物疫苗行业分析）">动物疫苗发展前景怎么样知乎（动物疫苗行业分析）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-1-free-node-subscribe-links.htm" title="V2ray Linux节点订阅每天更新21.3M/S免费节点订阅链接">V2ray Linux节点订阅每天更新21.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-80743.htm" title="成都宠物领养平台交流微信群号是什么名字（成都宠物犬领养）">成都宠物领养平台交流微信群号是什么名字（成都宠物犬领养）</a></li>
                        <li class="py-2"><a href="/news/article-89276.htm" title="广州宠物救助中心电话24小时（动物救援中心）">广州宠物救助中心电话24小时（动物救援中心）</a></li>
                        <li class="py-2"><a href="/news/article-96810.htm" title="MySQL 自定义序列">MySQL 自定义序列</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-14-free-node-subscribe.htm" title="V2ray Linux节点订阅每天更新18.9M/S免费节点订阅链接">V2ray Linux节点订阅每天更新18.9M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">45</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- /Alt Services Section -->
    </main>
        <footer id="footer" class="footer dark-background">
        <div class="container copyright text-center mt-4">
                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
            <p>
                <a href="/">V2ray Linux免费机场订阅节点官网</a> 版权所有 Powered by WordPress
            </p>
            <div class="credits">
                <!-- All the links in the footer should remain intact. -->
                <!-- You can delete the links only if you've purchased the pro version. -->
                <!-- Licensing information:  -->
                <!-- Purchase the pro version with working PHP/AJAX contact form: [buy-url] -->
            </div>
        </div>
    </footer>
    <!-- Scroll Top -->
    <a href="#" id="scroll-top" class="scroll-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Preloader -->
    <div id="preloader"></div>
    <!-- Vendor JS Files -->
    <script data-cfasync="false" src="/assets/website/js/frontend/v2raylinux/email-decode.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/jquery-3.6.0.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/validate.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/aos.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/swiper-bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/purecounter_vanilla.js"></script>
    <!-- Main JS File -->
    <script src="/assets/website/js/frontend/v2raylinux/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>