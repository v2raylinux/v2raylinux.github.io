<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2raylinux.github.io/news/article-65490.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>SpringCloud系列之五&#8212;集中配置组件Config+消息总线Bus</title>
        <meta name="description" content="文章目录        前言 集中配置组件SpringCloudConfig   1.SpringCloudConfig 简介 2.配置客户端 3.配置服务端 4.测试   消息总线 SpringCl" />
        <link rel="icon" href="/assets/website/img/v2raylinux/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2ray Linux免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2raylinux.github.io/news/article-65490.htm" />
    <meta property="og:site_name" content="V2ray Linux免费机场订阅节点官网" />
    <meta property="og:title" content="SpringCloud系列之五&#8212;集中配置组件Config+消息总线Bus" />
    <meta property="og:image" content="https://v2raylinux.github.io/uploads/20241109-1/9581bfba002781180397865aee9f8be7.webp" />
        <meta property="og:release_date" content="2025-03-01T07:00:27" />
    <meta property="og:updated_time" content="2025-03-01T07:00:27" />
        <meta property="og:description" content="文章目录        前言 集中配置组件SpringCloudConfig   1.SpringCloudConfig 简介 2.配置客户端 3.配置服务端 4.测试   消息总线 SpringCl" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="SpringCloud系列之五&#8212;集中配置组件Config+消息总线Bus">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <link rel="dns-prefetch" href="https://fonts.gstatic.com">

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/" rel="preconnect">
    <link href="https://fonts.gstatic.com/" rel="preconnect" crossorigin="">
    <link href="/assets/website/css/v2raylinux/css2-Robotoitalwght010003000400050007000900110013001400150017001900_OpenSansitalwght030004000500060007000800130014001500160017001800_Poppinsitalwght010002000300040005000600070008000900110012001300140015001600170018001900_swap.css" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/css/v2raylinux/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/aos.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/all.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2raylinux/swiper-bundle.min.css" rel="stylesheet">
    <!-- Main CSS File -->
    <link href="/assets/website/css/v2raylinux/main.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-WVK9TPX8ME"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-WVK9TPX8ME');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body class="about-page" data-page="detail">
        <header id="header" class="header d-flex align-items-center fixed-top">
        <div class="container-fluid container-xl position-relative d-flex align-items-center justify-content-between">
            <a href="/" class="logo d-flex align-items-center">
                                <span class="sitename">V2ray Linux</span>
                            </a>
            <nav id="navmenu" class="navmenu">
                <ul>
                                        <li><a href="/">首页</a></li>
                                        <li><a href="/free-nodes/">免费节点</a></li>
                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a href="/client.htm">客户端</a></li>
                                        <li><a href="/news/">新闻资讯</a></li>
                                    </ul>
                <i class="mobile-nav-toggle d-xl-none bi bi-list"></i>
            </nav>
        </div>
    </header>
    <main class="main">
        <!-- Page Title -->
        <div class="page-title dark-background" style="background-image: url(/assets/website/img/v2raylinux/page-title-bg.jpg);">
            <div class="container position-relative">
                <h1>SpringCloud系列之五&#8212;集中配置组件Config+消息总线Bus</h1>
                <nav class="breadcrumbs">
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="新闻资讯">新闻资讯</a></li>
                        <li class="current">正文</li>
                    </ol>
                </nav>
            </div>
        </div><!-- End Page Title -->
        <!-- Alt Services Section -->
        <section id="alt-services" class="alt-services section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="V2ray X节点订阅官网" data-url="https://v2rayx.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li> <ul> <li> <ul> <li> <ul> <li><a href="#_1" rel="nofollow">前言</a></li> <li><a href="#SpringCloudConfig_7" rel="nofollow">集中配置组件SpringCloudConfig</a></li> <li> <ul> <li><a href="#1SpringCloudConfig__9" rel="nofollow">1.SpringCloudConfig 简介</a></li> <li><a href="#2_16" rel="nofollow">2.配置客户端</a></li> <li><a href="#3_85" rel="nofollow">3.配置服务端</a></li> <li><a href="#4_124" rel="nofollow">4.测试</a></li> </ul> </li> <li><a href="#_SpringCloudBus_146" rel="nofollow">消息总线 SpringCloudBus</a></li> <li> <ul> <li><a href="#1_149" rel="nofollow">1.配置客户端</a></li> <li><a href="#2_181" rel="nofollow">2.配置服务端</a></li> <li><a href="#3_215" rel="nofollow">3.测试</a></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </div> <h4> <a id="_1" rel="nofollow"></a>前言</h4> <p>本篇文章主要介绍的是集中配置组件SpringCloudConfig和消息总线SpringCloudBus这两个springcloud组件。</p> <p>GitHub源码链接位于文章底部。</p> <h4> <a id="SpringCloudConfig_7" rel="nofollow"></a>集中配置组件SpringCloudConfig</h4> <h5> <a id="1SpringCloudConfig__9" rel="nofollow"></a>1.SpringCloudConfig 简介</h5> <p>在分布式系统中，由于服务数量巨多，为了方便服务配置文件统一管理，实时更新，所以需要分布式配置中心组件。在 Spring Cloud 中，有分布式配置中心组件 spring cloud config ，它支持配置服务放在配置服务的内存中（即本地），也支持放在远程 Git 仓库中。在 spring cloudconfig 组件中，分两个角色，一是 config server，二是 config client。</p> <p>Config Server 是一个可横向扩展、集中式的配置服务器，它用于集中管理应用程序各个环境下的配置，默认使用 Git 存储配置文件内容，也可以使用 SVN 存储，或者是本地文件存储。</p> <p>Config Client 是 Config Server 的客户端，用于操作存储在 Config Server 中的配置内容。微服务在启动时会请求 Config Server 获取配置文件的内容，请求到后再启动容器。</p> <h5> <a id="2_16" rel="nofollow"></a>2.配置客户端</h5> <p>创建springcloud-config-bus-client客户端项目<br /> 2.1 pom中添加依赖</p> <pre><code class="prism language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span> 	<span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span> 	<span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>starter<span class="token operator">-</span>config<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span> <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span> 	<span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span> 	<span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>actuator<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span> </code></pre> <p>2.2 在resource资中添加一个bootstrap.yml配置文件，这个配置是用来连接配置中心服务端，以及开放刷新接口的<br /> 这里的配置和下一步要上传到码云的配置文件名是有关联的。</p> <pre><code class="prism language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>   <span class="token key atrule">cloud</span><span class="token punctuation">:</span>     <span class="token key atrule">config</span><span class="token punctuation">:</span>       <span class="token comment">#仓库中的文件名是由name-profile组成的，例如 config-dev</span>       <span class="token key atrule">name</span><span class="token punctuation">:</span> config_client       <span class="token key atrule">profile</span><span class="token punctuation">:</span> dev       <span class="token comment">#仓库中的分支</span>       <span class="token key atrule">label</span><span class="token punctuation">:</span> master       <span class="token comment">#config服务端的url</span>       <span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span><span class="token number">8101</span>  <span class="token comment">#启动配置刷新接口，访问http://本微服务ip+端口/actuator/refresh</span> <span class="token key atrule">management</span><span class="token punctuation">:</span>   <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>     <span class="token key atrule">web</span><span class="token punctuation">:</span>       <span class="token key atrule">exposure</span><span class="token punctuation">:</span>         <span class="token key atrule">include</span><span class="token punctuation">:</span> refresh </code></pre> <p>2.3 创建client_config-dev.yml配置文件</p> <pre><code class="prism language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>   <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8102</span>  <span class="token key atrule">spring</span><span class="token punctuation">:</span>   <span class="token key atrule">application</span><span class="token punctuation">:</span>     <span class="token key atrule">name</span><span class="token punctuation">:</span> config_client  <span class="token key atrule">my</span><span class="token punctuation">:</span>   <span class="token key atrule">config</span><span class="token punctuation">:</span> configBusTestMsg </code></pre> <p>使用 GitHub 时，国内的用户经常遇到的问题是访问速度太慢，有时候还会出现无法连接的情况。因此这里使用国内的 Git 托管服务——码云（gitee.com）。</p> <p>在码云创建一个仓库config-bus,将client_config-dev.yml配置文件上传到该仓库。复制该仓库的地址，填写到下一步的服务端配置中。</p> <p>2.4 创建一个测试的controller，类上添加RefreshScope注解实现刷新功能。<br /> 这里使用Value注解获取配置中的值</p> <pre><code class="prism language-yaml">@RestController @RefreshScope public class ConfigBusController <span class="token punctuation">{<!-- --></span>     @Value("$<span class="token punctuation">{<!-- --></span>my.config<span class="token punctuation">}</span>")     private String myConfig;      @GetMapping("/getConfig")     public String configBusTest() <span class="token punctuation">{<!-- --></span>         return myConfig;     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h5> <a id="3_85" rel="nofollow"></a>3.配置服务端</h5> <p>创建springcloud-config-bus-server服务端项目</p> <p>3.1 pom中添加依赖</p> <pre><code class="prism language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span> 	<span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span> 	<span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>config<span class="token operator">-</span>server<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span> </code></pre> <p>3.2 application.yml配置文件中添加配置</p> <p>地址由步骤2.3中获取</p> <pre><code class="prism language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>   <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8101</span> <span class="token key atrule">spring</span><span class="token punctuation">:</span>   <span class="token key atrule">application</span><span class="token punctuation">:</span>     <span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>bus   <span class="token key atrule">cloud</span><span class="token punctuation">:</span>     <span class="token key atrule">config</span><span class="token punctuation">:</span>       <span class="token key atrule">server</span><span class="token punctuation">:</span>         <span class="token key atrule">git</span><span class="token punctuation">:</span> 		  <span class="token comment">#码云仓库地址</span>           <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//gitee.com/lixianguo/config<span class="token punctuation">-</span>bus.git </code></pre> <p>3.3启动类</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@EnableConfigServer</span> <span class="token annotation punctuation">@SpringBootApplication</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigBusServerApplication</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ConfigBusServerApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h5> <a id="4_124" rel="nofollow"></a>4.测试</h5> <p>依次启动服务端、客户端，浏览器访问客户端的接口 localhost:8102/getConfig ，能获取到码云上配置文件中的配置</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230108/29292db1e4e854cbc07f5b547e2e5366.jpg" alt="SpringCloud系列之五---集中配置组件Config+消息总线Bus"></p> <p>修改码云上配置文件</p> <pre><code class="prism language-yaml"><span class="token key atrule">my</span><span class="token punctuation">:</span>   <span class="token key atrule">config</span><span class="token punctuation">:</span> configBusTestMsg！！！！！！！！！  </code></pre> <p>再次访问该接口，发现没有刷新配置，这里需要使用Postman等接口测试工具，使用post请求方式访问localhost:8102/actuator/refresh ，也就是本微服务ip+端口/actuator/refresh</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230108/7be0c820e531fefd0950e0f366aa012d.jpg" alt="SpringCloud系列之五---集中配置组件Config+消息总线Bus"></p> <p>浏览器再次访问客户端的接口 localhost:8102/getConfig 会发现已经发生改变。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230108/8c9c43e7f969dad8cb1dde16304f41bc.jpg" alt="SpringCloud系列之五---集中配置组件Config+消息总线Bus"></p> <p>这样就能实现刷新了。但是分布式项目中的微服务是由很多的，每个微服务都有自己的配置文件，这些配置文件都需要托管到码云上，如果大量的配置文件修改完以后需要刷新，就要访问不同的ip+端口，这样无疑是很麻烦的。如果只刷新一个接口就能刷新所有微服务的配置就好了。 消息总线 SpringCloudBus就解决了这个问题，他将刷新配置的接口从客户端转移到配置中心服务端了，客户端微服务可能有很多个，但是配置中心服务端只有一个。</p> <h4> <a id="_SpringCloudBus_146" rel="nofollow"></a>消息总线 SpringCloudBus</h4> <blockquote> <p>Bus需要用到消息中间件来存储消息，如RabbitMq,kafka,本文使用RabbitMq作为示例。RabbitMq的安装与使用参考另一篇文章。</p> </blockquote> <h5> <a id="1_149" rel="nofollow"></a>1.配置客户端</h5> <p>1.1 pom文件新添加依赖，上面Config的依赖不能删除</p> <pre><code class="prism language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span> 	<span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span> 	<span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>bus<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span> <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span> 	<span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span> 	<span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>stream<span class="token operator">-</span>binder<span class="token operator">-</span>rabbit<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span> </code></pre> <p>1.2 修改项目中bootstrap.yml配置文件，将刷新接口的配置删除</p> <pre><code class="prism language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>   <span class="token key atrule">cloud</span><span class="token punctuation">:</span>     <span class="token key atrule">config</span><span class="token punctuation">:</span>       <span class="token comment">#仓库中的文件名是由name-profile组成的，例如 config-dev</span>       <span class="token key atrule">name</span><span class="token punctuation">:</span> config_client       <span class="token key atrule">profile</span><span class="token punctuation">:</span> dev       <span class="token comment">#仓库中的分支</span>       <span class="token key atrule">label</span><span class="token punctuation">:</span> master       <span class="token comment">#config服务端的url</span>       <span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span><span class="token number">8101</span>  </code></pre> <p>1.3 修改码云上的client——config-dev.yml配置文件的配置，添加一个rabbitmq的配置</p> <h5> <a id="2_181" rel="nofollow"></a>2.配置服务端</h5> <p>2.1 pom文件新添加依赖，上面Config的依赖不能删除</p> <pre><code class="prism language-java"><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span> 	<span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span> 	<span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>bus<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span> <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span> 	<span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span> 	<span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>stream<span class="token operator">-</span>binder<span class="token operator">-</span>rabbit<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span> </code></pre> <p>2.2 修改application.yml配置文件，添加RabbitMq和刷新接口的配置</p> <pre><code class="prism language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>   <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8101</span> <span class="token key atrule">spring</span><span class="token punctuation">:</span>   <span class="token key atrule">application</span><span class="token punctuation">:</span>     <span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>bus   <span class="token key atrule">cloud</span><span class="token punctuation">:</span>     <span class="token key atrule">config</span><span class="token punctuation">:</span>       <span class="token key atrule">server</span><span class="token punctuation">:</span>         <span class="token key atrule">git</span><span class="token punctuation">:</span>           <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//gitee.com/lixianguo/config<span class="token punctuation">-</span>bus.git   <span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span>       <span class="token key atrule">host</span><span class="token punctuation">:</span> 127.0.0.1 <span class="token key atrule">management</span><span class="token punctuation">:</span>   <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>     <span class="token key atrule">web</span><span class="token punctuation">:</span>       <span class="token key atrule">exposure</span><span class="token punctuation">:</span>         <span class="token key atrule">include</span><span class="token punctuation">:</span> bus<span class="token punctuation">-</span>refresh </code></pre> <h5> <a id="3_215" rel="nofollow"></a>3.测试</h5> <p>依次启动服务端、客户端，浏览器访问客户端的接口 localhost:8102/getConfig ，能获取到码云上配置文件中的配置</p> <p>修改码云上配置文件</p> <pre><code class="prism language-yaml"><span class="token key atrule">my</span><span class="token punctuation">:</span>   <span class="token key atrule">config</span><span class="token punctuation">:</span> configBusTestMsg！！！！！！！！！  </code></pre> <p>再次访问该接口，发现没有刷新配置，这里需要使用Postman等接口测试工具，使用post请求方式访问localhost:8101/actuator/refresh ，也就是配置中心微服务ip+端口/actuator/bus-refresh</p> <p>再次访问该接口会发现已经刷新配置。</p> <p>本文GitHub源码：https://github.com/lixianguo5097/springcloud/tree/master/springcloud-config-bus</p> <p>CSDN：https://blog.csdn.net/qq_27682773<br /> 简书：https://www.jianshu.com/u/e99381e6886e<br /> 博客园：https://www.cnblogs.com/lixianguo</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-65489.htm">零宽断言正则表达式替换方案</a></p>
                                        <p>下一个：<a href="/news/article-66100.htm">tf.train.latest_checkpoint()报错，路径错误</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-47160.htm" title="JavaScript如何将字符串转换为分层对象">JavaScript如何将字符串转换为分层对象</a></li>
                        <li class="py-2"><a href="/news/article-41243.htm" title="动物打疫苗肉还能吃吗有毒吗 动物打疫苗肉还能吃吗有毒吗视频">动物打疫苗肉还能吃吗有毒吗 动物打疫苗肉还能吃吗有毒吗视频</a></li>
                        <li class="py-2"><a href="/news/article-56684.htm" title="和田宠物店（和田卖宠物的地方）">和田宠物店（和田卖宠物的地方）</a></li>
                        <li class="py-2"><a href="/news/article-31458.htm" title="宠物粮加工厂利润 宠物粮加工厂利润怎么样">宠物粮加工厂利润 宠物粮加工厂利润怎么样</a></li>
                        <li class="py-2"><a href="/news/article-52826.htm" title="宠物领养平台免费有哪些呢可靠的简单介绍">宠物领养平台免费有哪些呢可靠的简单介绍</a></li>
                        <li class="py-2"><a href="/news/article-61268.htm" title="动物防疫疫苗中标公告公示几天（2020年动物疫苗采购中标）">动物防疫疫苗中标公告公示几天（2020年动物疫苗采购中标）</a></li>
                        <li class="py-2"><a href="/news/article-43736.htm" title="延吉市宠颐生宠物医院（延吉市宠颐生宠物医院招聘）">延吉市宠颐生宠物医院（延吉市宠颐生宠物医院招聘）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-18-free-node-subscribe.htm" title="V2ray Linux节点订阅每天更新21.1M/S免费节点订阅链接">V2ray Linux节点订阅每天更新21.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-57229.htm" title="开宠物店赔钱吗（开宠物店亏损多吗）">开宠物店赔钱吗（开宠物店亏损多吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-13-free-high-speed-nodes.htm" title="V2ray Linux节点订阅每天更新20.6M/S免费节点订阅链接">V2ray Linux节点订阅每天更新20.6M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">9</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">87</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- /Alt Services Section -->
    </main>
        <footer id="footer" class="footer dark-background">
        <div class="container copyright text-center mt-4">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
            <p>
                <a href="/">V2ray Linux免费机场订阅节点官网</a> 版权所有 Powered by WordPress
            </p>
            <div class="credits">
                <!-- All the links in the footer should remain intact. -->
                <!-- You can delete the links only if you've purchased the pro version. -->
                <!-- Licensing information:  -->
                <!-- Purchase the pro version with working PHP/AJAX contact form: [buy-url] -->
            </div>
        </div>
    </footer>
    <!-- Scroll Top -->
    <a href="#" id="scroll-top" class="scroll-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Preloader -->
    <div id="preloader"></div>
    <!-- Vendor JS Files -->
    <script data-cfasync="false" src="/assets/website/js/frontend/v2raylinux/email-decode.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/jquery-3.6.0.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/validate.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/aos.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/swiper-bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2raylinux/purecounter_vanilla.js"></script>
    <!-- Main JS File -->
    <script src="/assets/website/js/frontend/v2raylinux/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>